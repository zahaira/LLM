# Langchain Demo with LLAMA2 (Local)

## Overview

# This Jupyter Notebook demonstrates how to create a simple interactive application using Langchain, Streamlit, and the locally-running LLAMA2 model provided by Ollama. The application allows users to input a query and receive responses generated by the local LLAMA2 model.


## Code

### Import Libraries
from langchain_core.prompts import ChatPromptTemplate
from langchain_core.output_parsers import StrOutputParser
from langchain_community.llms import Ollama
import streamlit as st
import os
from dotenv import load_dotenv

### Create Prompt Template
prompt = ChatPromptTemplate.from_messages(
    [
        ("system", "You are a helpful assistant. Please respond to the user queries."),
        ("user", "Question: {question}")
    ]
)

### Streamlit Application Setup
st.title('Langchain Demo With LLAMA2 (Local)')
input_text = st.text_input("Start your search")

### Initialize LLAMA2 Model and Chain

# Before running the following code, you need to install Ollama and download the LLAMA2 model locally. Follow these steps:

# For more information on the LLMs provided by Ollama, visit their GitHub repository: https://github.com/ollama/ollama

llm = Ollama(model="llama2")
output_parser = StrOutputParser()
chain = prompt | llm | output_parser


if input_text:
    st.write(chain.invoke({"question":input_text}))

### Run Streamlit Application
#in the terminal run : streamlit run llama2locally.py